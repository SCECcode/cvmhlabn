name: cvmhlabn-ucvm-ci

on:
  push:
    branches: [ main ]

jobs:
  cvmhlabn-build-ucvm-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - name: set UCVM_SRC_PATH 
      run: echo "UCVM_SRC_PATH=$RUNNER_WORKSPACE/cvmhlabn/ucvm" >> $GITHUB_ENV
    - name: set UCVM_INSTALL_PATH 
      run: echo "UCVM_INSTALL_PATH=$RUNNER_WORKSPACE/cvmhlabn/target" >> $GITHUB_ENV
### build ucvm(basin) first 
    - id: get-ucvm 
      uses: actions/checkout@v2
      with: 
        repository: 'SCECcode/UCVM'
        ref: basin
        path: ucvm
    - id: look-around
      run: ( echo " cvmhlabn-ucvm-ci:pwd =>";pwd;
             echo " cvmhlabn-ucvm-ci:UCVM_SRC_PATH =>"$UCVM_SRC_PATH;
             echo " cvmhlabn-ucvm-ci:UCVM_INSTALL_PATH =>"$UCVM_INSTALL_PATH;
             echo " cvmhlabn-ucvm-ci:RUNNER_WORKSPACE =>"$RUNNER_WORKSPACE;
             echo " cvmhlabn-ucvm-ci:github.action_path =>"${{ github.action_path }};)
      shell: bash
    - id: build-ucvm
      uses: SCECcode/UCVM/.github/actions/build-action@v1
      with:
         initiating-repo: 'cvmhlabn'
         target-model: 'cvmhlabn'
    - name: Start SSH via Ngrok when ucvm-test.sh fails
      if: ${{ failure() }}
      uses: luchihoratiu/debug-via-ssh@main
      with:
            NGROK_AUTH_TOKEN: ${{ secrets.NGROK_TOKEN }}
            NGROK_TIMEOUT: 6000
            SSH_PASS: ${{ secrets.NGROK_SECRET }}
    - id: get-result
      run: more ${{ steps.build-ucvm.outputs.build-log }}
      shell: bash
    - name: move stock cvmhlabn away
      run: (mv $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model/cvmhlabn $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model/cvmhlabn-old)
      shell: bash
### build cvmhlabn from github 
    - name: checkout cvmhlabn main
      uses: actions/checkout@v2
      with: 
        path: cvmhlabn
    - name: move it to the right location
      run: (mv cvmhlabn $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model; pwd; ls)
      shell: bash
#    - run: ( echo " cvmhlabn-ucvm-ci2:pwd =>"; pwd;
#             echo " cvmhlabn-ucvm-ci2:ls =>"; ls;
#             echo " cvmhlabn-ucvm-ci2:RUNNER_WORKSPACE =>"$RUNNER_WORKSPACE;
#             echo " cvmhlabn-ucvm-ci2:github.action_path =>"${{ github.action_path }};)
#      shell: bash
    - name: build cvmhlabn as part of ucvm 
      run: (cd $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model/cvmhlabn; ./.github/scripts/cvmhlabn-build.sh)
      shell: bash
### check ucvm is still valid
    - name: check on ucvm
      run: (source $UCVM_INSTALL_PATH/conf/ucvm_env.sh; ucvm_query -H)
      shell: bash
    - name: test cvmhlabn standalone
      run: (cd $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model/cvmhlabn; ./.github/scripts/cvmhlabn-test-standalone.sh)
      shell: bash
    - name: test cvmhlabn with ucvm
      run: (cd $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model/cvmhlabn; source $UCVM_INSTALL_PATH/conf/ucvm_env.sh; ./.github/scripts/cvmhlabn-test-ucvm.sh)
      shell: bash
    - name: test cvmhlabn under ucvm
      run: (cd $RUNNER_WORKSPACE/cvmhlabn/ucvm; source $UCVM_INSTALL_PATH/conf/ucvm_env.sh; ./.github/scripts/ucvm-test.sh)
      shell: bash

  cvmhlabn-build-ucvm-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - name: set UCVM_SRC_PATH 
      run: echo "UCVM_SRC_PATH=$RUNNER_WORKSPACE/cvmhlabn/ucvm" >> $GITHUB_ENV
    - name: set UCVM_INSTALL_PATH 
      run: echo "UCVM_INSTALL_PATH=$RUNNER_WORKSPACE/cvmhlabn/target" >> $GITHUB_ENV
### build ucvm(basin) first 
    - id: get-ucvm 
      uses: actions/checkout@v2
      with: 
        repository: 'SCECcode/UCVM'
        ref: basin
        path: ucvm
    - id: look-around
      run: ( echo " cvmhlabn-ucvm-ci:pwd =>";pwd;
             echo " cvmhlabn-ucvm-ci:UCVM_SRC_PATH =>"$UCVM_SRC_PATH;
             echo " cvmhlabn-ucvm-ci:UCVM_INSTALL_PATH =>"$UCVM_INSTALL_PATH;
             echo " cvmhlabn-ucvm-ci:RUNNER_WORKSPACE =>"$RUNNER_WORKSPACE;
             echo " cvmhlabn-ucvm-ci:github.action_path =>"${{ github.action_path }};)
      shell: bash
    - id: build-ucvm
      uses: SCECcode/UCVM/.github/actions/build-action@v1
      with:
         initiating-repo: 'cvmhlabn'
         target-model: 'cvmhlabn'
    - name: Start SSH via Ngrok when ucvm-test.sh fails
      if: ${{ failure() }}
      uses: luchihoratiu/debug-via-ssh@main
      with:
            NGROK_AUTH_TOKEN: ${{ secrets.NGROK_TOKEN }}
            NGROK_TIMEOUT: 6000
            SSH_PASS: ${{ secrets.NGROK_SECRET }}
    - id: get-result
      run: more ${{ steps.build-ucvm.outputs.build-log }}
      shell: bash
    - name: move stock cvmhlabn away
      run: (mv $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model/cvmhlabn $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model/cvmhlabn-old)
      shell: bash
### build cvmhlabn from github 
    - name: checkout cvmhlabn main
      uses: actions/checkout@v2
      with: 
        path: cvmhlabn
    - name: move it to the right location
      run: (mv cvmhlabn $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model; pwd; ls)
      shell: bash
#    - run: ( echo " cvmhlabn-ucvm-ci2:pwd =>"; pwd;
#             echo " cvmhlabn-ucvm-ci2:ls =>"; ls;
#             echo " cvmhlabn-ucvm-ci2:RUNNER_WORKSPACE =>"$RUNNER_WORKSPACE;
#             echo " cvmhlabn-ucvm-ci2:github.action_path =>"${{ github.action_path }};)
#      shell: bash
    - name: build cvmhlabn as part of ucvm 
      run: (cd $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model/cvmhlabn; ./.github/scripts/cvmhlabn-build.sh)
      shell: bash
### check ucvm is still valid
    - name: check on ucvm
      run: (source $UCVM_INSTALL_PATH/conf/ucvm_env.sh; ucvm_query -H)
      shell: bash
    - name: test cvmhlabn standalone
      run: (cd $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model/cvmhlabn; ./.github/scripts/cvmhlabn-test-standalone.sh)
      shell: bash
    - name: test cvmhlabn with ucvm
      run: (cd $RUNNER_WORKSPACE/cvmhlabn/ucvm/work/model/cvmhlabn; source $UCVM_INSTALL_PATH/conf/ucvm_env.sh; ./.github/scripts/cvmhlabn-test-ucvm.sh)
      shell: bash
    - name: test cvmhlabn under ucvm
      run: (cd $RUNNER_WORKSPACE/cvmhlabn/ucvm; source $UCVM_INSTALL_PATH/conf/ucvm_env.sh; ./.github/scripts/ucvm-test.sh)
      shell: bash



